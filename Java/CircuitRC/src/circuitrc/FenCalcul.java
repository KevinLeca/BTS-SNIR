/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package circuitrc;

import java.awt.Color;

/**
 *
 * @author kleca
 */
public class FenCalcul extends javax.swing.JFrame {

    /**
     * Creates new form FenCalcul
     */
    public FenCalcul() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        etiResistor = new javax.swing.JLabel();
        etiCapacitor = new javax.swing.JLabel();
        etiFrequency = new javax.swing.JLabel();
        valResistor = new javax.swing.JTextField();
        valCapacitor = new javax.swing.JTextField();
        valFrequency = new javax.swing.JTextField();
        radioResistor = new javax.swing.JRadioButton();
        radioCapacitor = new javax.swing.JRadioButton();
        radioFrequency = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        buttonCalcul = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(220, 300));
        setResizable(false);
        getContentPane().setLayout(null);

        etiResistor.setText("R");
        getContentPane().add(etiResistor);
        etiResistor.setBounds(10, 60, 20, 15);

        etiCapacitor.setText("C");
        getContentPane().add(etiCapacitor);
        etiCapacitor.setBounds(10, 100, 20, 15);

        etiFrequency.setText("Fc");
        getContentPane().add(etiFrequency);
        etiFrequency.setBounds(10, 140, 20, 15);

        valResistor.setMinimumSize(new java.awt.Dimension(100, 30));
        valResistor.setPreferredSize(new java.awt.Dimension(50, 19));
        valResistor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valResistorActionPerformed(evt);
            }
        });
        getContentPane().add(valResistor);
        valResistor.setBounds(50, 49, 90, 30);

        valCapacitor.setMinimumSize(new java.awt.Dimension(100, 30));
        valCapacitor.setPreferredSize(new java.awt.Dimension(50, 19));
        getContentPane().add(valCapacitor);
        valCapacitor.setBounds(50, 89, 90, 30);

        valFrequency.setMinimumSize(new java.awt.Dimension(100, 30));
        valFrequency.setPreferredSize(new java.awt.Dimension(50, 19));
        valFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valFrequencyActionPerformed(evt);
            }
        });
        getContentPane().add(valFrequency);
        valFrequency.setBounds(50, 129, 90, 30);

        buttonGroup1.add(radioResistor);
        radioResistor.setText("R");
        radioResistor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioResistorActionPerformed(evt);
            }
        });
        getContentPane().add(radioResistor);
        radioResistor.setBounds(10, 210, 40, 23);

        buttonGroup1.add(radioCapacitor);
        radioCapacitor.setText("C");
        radioCapacitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCapacitorActionPerformed(evt);
            }
        });
        getContentPane().add(radioCapacitor);
        radioCapacitor.setBounds(70, 210, 40, 23);

        buttonGroup1.add(radioFrequency);
        radioFrequency.setText("Fc");
        radioFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFrequencyActionPerformed(evt);
            }
        });
        getContentPane().add(radioFrequency);
        radioFrequency.setBounds(130, 210, 50, 23);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Circuit RC");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 10, 180, 30);

        buttonCalcul.setText("Calculer");
        buttonCalcul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonCalculMouseClicked(evt);
            }
        });
        getContentPane().add(buttonCalcul);
        buttonCalcul.setBounds(60, 260, 91, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFrequencyActionPerformed
        // TODO add your handling code here:
        if(radioFrequency.isSelected()){
            valFrequency.setBackground(Color.LIGHT_GRAY);
            valFrequency.setEditable(false);
            
            valCapacitor.setBackground(Color.white);
            valCapacitor.setEditable(true);
            
            valResistor.setBackground(Color.white);
            valResistor.setEditable(true);
        }
    }//GEN-LAST:event_radioFrequencyActionPerformed

    private void radioCapacitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCapacitorActionPerformed
        // TODO add your handling code here:
        if(radioCapacitor.isSelected()){
            valCapacitor.setBackground(Color.LIGHT_GRAY);
            valCapacitor.setEditable(false);
            
            valResistor.setBackground(Color.white);
            valResistor.setEditable(true);
            
            valFrequency.setBackground(Color.white);
            valFrequency.setEditable(true);
        }
    }//GEN-LAST:event_radioCapacitorActionPerformed

    private void radioResistorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioResistorActionPerformed
        // TODO add your handling code here:
        if(radioResistor.isSelected()){
            valResistor.setBackground(Color.LIGHT_GRAY);
            valResistor.setEditable(false);
            
            valFrequency.setBackground(Color.white);
            valFrequency.setEditable(true);
            
            valCapacitor.setBackground(Color.white);
            valCapacitor.setEditable(true);
        }
    }//GEN-LAST:event_radioResistorActionPerformed

    private void valResistorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valResistorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valResistorActionPerformed

    private void valFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valFrequencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valFrequencyActionPerformed

    private void buttonCalculMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCalculMouseClicked
        // TODO add your handling code here:
        double resistor;
        double capacitor;
        double frequency;
        String capa;
        String resi;
        String freq;
        
        if(radioCapacitor.isSelected()){
            resistor = Double.parseDouble(valResistor.getText());
            frequency = Double.parseDouble(valFrequency.getText());
            capacitor = 1 / (2*Math.PI*frequency*resistor);
            capa = String.valueOf(capacitor);
            valCapacitor.setText(capa);
        }
        
        if(radioFrequency.isSelected()){
            resistor = Double.parseDouble(valResistor.getText());
            capacitor = Double.parseDouble(valCapacitor.getText());
            frequency = 1 / (2*Math.PI*resistor*capacitor);
            freq = String.valueOf(frequency);
            valFrequency.setText(freq);
        }
        
        if(radioResistor.isSelected()){
            frequency = Double.parseDouble(valFrequency.getText());
            capacitor = Double.parseDouble(valCapacitor.getText());
            resistor = 1 / (2*Math.PI*frequency*capacitor);
            resi = String.valueOf(resistor);
            valResistor.setText(resi);
        }
    }//GEN-LAST:event_buttonCalculMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenCalcul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenCalcul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenCalcul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenCalcul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenCalcul().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCalcul;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel etiCapacitor;
    private javax.swing.JLabel etiFrequency;
    private javax.swing.JLabel etiResistor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton radioCapacitor;
    private javax.swing.JRadioButton radioFrequency;
    private javax.swing.JRadioButton radioResistor;
    private javax.swing.JTextField valCapacitor;
    private javax.swing.JTextField valFrequency;
    private javax.swing.JTextField valResistor;
    // End of variables declaration//GEN-END:variables
}
